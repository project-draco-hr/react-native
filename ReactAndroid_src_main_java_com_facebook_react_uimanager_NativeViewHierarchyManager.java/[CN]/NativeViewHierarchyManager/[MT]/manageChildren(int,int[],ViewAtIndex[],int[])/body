{
  final ViewGroup viewToManage=(ViewGroup)mTagsToViews.get(tag);
  final ViewGroupManager viewManager=(ViewGroupManager)resolveViewManager(tag);
  if (viewToManage == null) {
    throw new IllegalViewOperationException("Trying to manageChildren view with tag " + tag + " which doesn't exist\n detail: "+ constructManageChildrenErrorMessage(viewToManage,viewManager,indicesToRemove,viewsToAdd,tagsToDelete));
  }
  int lastIndexToRemove=viewManager.getChildCount(viewToManage);
  if (indicesToRemove != null) {
    for (int i=indicesToRemove.length - 1; i >= 0; i--) {
      int indexToRemove=indicesToRemove[i];
      if (indexToRemove < 0) {
        throw new IllegalViewOperationException("Trying to remove a negative view index:" + indexToRemove + " view tag: "+ tag+ "\n detail: "+ constructManageChildrenErrorMessage(viewToManage,viewManager,indicesToRemove,viewsToAdd,tagsToDelete));
      }
      if (indexToRemove >= viewManager.getChildCount(viewToManage)) {
        throw new IllegalViewOperationException("Trying to remove a view index above child " + "count " + indexToRemove + " view tag: "+ tag+ "\n detail: "+ constructManageChildrenErrorMessage(viewToManage,viewManager,indicesToRemove,viewsToAdd,tagsToDelete));
      }
      if (indexToRemove >= lastIndexToRemove) {
        throw new IllegalViewOperationException("Trying to remove an out of order view index:" + indexToRemove + " view tag: "+ tag+ "\n detail: "+ constructManageChildrenErrorMessage(viewToManage,viewManager,indicesToRemove,viewsToAdd,tagsToDelete));
      }
      View viewToRemove=viewToManage.getChildAt(indexToRemove);
      if (mLayoutAnimator.shouldAnimateLayout(viewToRemove) && arrayContains(tagsToDelete,viewToRemove.getId())) {
      }
 else {
        viewManager.removeViewAt(viewToManage,indexToRemove);
      }
      lastIndexToRemove=indexToRemove;
    }
  }
  if (viewsToAdd != null) {
    for (int i=0; i < viewsToAdd.length; i++) {
      ViewAtIndex viewAtIndex=viewsToAdd[i];
      View viewToAdd=mTagsToViews.get(viewAtIndex.mTag);
      if (viewToAdd == null) {
        throw new IllegalViewOperationException("Trying to add unknown view tag: " + viewAtIndex.mTag + "\n detail: "+ constructManageChildrenErrorMessage(viewToManage,viewManager,indicesToRemove,viewsToAdd,tagsToDelete));
      }
      viewManager.addView(viewToManage,viewToAdd,viewAtIndex.mIndex);
    }
  }
  if (tagsToDelete != null) {
    for (int i=0; i < tagsToDelete.length; i++) {
      int tagToDelete=tagsToDelete[i];
      final View viewToDestroy=mTagsToViews.get(tagToDelete);
      if (viewToDestroy == null) {
        throw new IllegalViewOperationException("Trying to destroy unknown view tag: " + tagToDelete + "\n detail: "+ constructManageChildrenErrorMessage(viewToManage,viewManager,indicesToRemove,viewsToAdd,tagsToDelete));
      }
      if (mLayoutAnimator.shouldAnimateLayout(viewToDestroy)) {
        mLayoutAnimator.deleteView(viewToDestroy,new LayoutAnimationListener(){
          @Override public void onAnimationEnd(){
            viewManager.removeView(viewToManage,viewToDestroy);
            dropView(viewToDestroy);
          }
        }
);
      }
 else {
        dropView(viewToDestroy);
      }
    }
  }
}
