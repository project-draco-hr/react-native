{
  if (count == 0 && before == 0) {
    return;
  }
  Assertions.assertNotNull(mPreviousText);
  String newText=s.toString().substring(start,start + count);
  String oldText=mPreviousText.substring(start,start + before);
  if (count == before && newText.equals(oldText)) {
    return;
  }
  int contentWidth=mEditText.getWidth();
  int contentHeight=mEditText.getHeight();
  if (mEditText.getLayout() != null) {
    contentWidth=mEditText.getCompoundPaddingLeft() + mEditText.getLayout().getWidth() + mEditText.getCompoundPaddingRight();
    contentHeight=mEditText.getCompoundPaddingTop() + mEditText.getLayout().getHeight() + mEditText.getCompoundPaddingTop();
  }
  mEventDispatcher.dispatchEvent(new ReactTextChangedEvent(mEditText.getId(),s.toString(),(int)PixelUtil.toDIPFromPixel(contentWidth),(int)PixelUtil.toDIPFromPixel(contentHeight),mEditText.incrementAndGetEventCounter()));
  mEventDispatcher.dispatchEvent(new ReactTextInputEvent(mEditText.getId(),newText,oldText,start,start + before));
}
