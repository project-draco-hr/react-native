{
  editText.addTextChangedListener(new ReactTextInputTextWatcher(reactContext,editText));
  editText.setOnFocusChangeListener(new View.OnFocusChangeListener(){
    public void onFocusChange(    View v,    boolean hasFocus){
      EventDispatcher eventDispatcher=reactContext.getNativeModule(UIManagerModule.class).getEventDispatcher();
      if (hasFocus) {
        eventDispatcher.dispatchEvent(new ReactTextInputFocusEvent(editText.getId()));
      }
 else {
        eventDispatcher.dispatchEvent(new ReactTextInputBlurEvent(editText.getId()));
        eventDispatcher.dispatchEvent(new ReactTextInputEndEditingEvent(editText.getId(),editText.getText().toString()));
      }
    }
  }
);
  editText.setOnEditorActionListener(new TextView.OnEditorActionListener(){
    @Override public boolean onEditorAction(    TextView v,    int actionId,    KeyEvent keyEvent){
      if ((actionId & EditorInfo.IME_MASK_ACTION) > 0 || actionId == EditorInfo.IME_NULL) {
        EventDispatcher eventDispatcher=reactContext.getNativeModule(UIManagerModule.class).getEventDispatcher();
        eventDispatcher.dispatchEvent(new ReactTextInputSubmitEditingEvent(editText.getId(),editText.getText().toString()));
      }
      if (actionId == EditorInfo.IME_ACTION_NEXT || actionId == EditorInfo.IME_ACTION_PREVIOUS) {
        if (editText.getBlurOnSubmit()) {
          editText.clearFocus();
        }
        return true;
      }
      return !editText.getBlurOnSubmit();
    }
  }
);
}
