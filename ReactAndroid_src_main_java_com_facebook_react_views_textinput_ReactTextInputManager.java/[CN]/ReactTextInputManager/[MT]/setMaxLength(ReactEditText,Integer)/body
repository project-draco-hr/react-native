{
  InputFilter[] currentFilters=view.getFilters();
  InputFilter[] newFilters=EMPTY_FILTERS;
  if (maxLength == null) {
    if (currentFilters.length > 0) {
      LinkedList<InputFilter> list=new LinkedList<>();
      for (int i=0; i < currentFilters.length; i++) {
        if (!(currentFilters[i] instanceof InputFilter.LengthFilter)) {
          list.add(currentFilters[i]);
        }
      }
      if (!list.isEmpty()) {
        newFilters=(InputFilter[])list.toArray(new InputFilter[list.size()]);
      }
    }
  }
 else {
    if (currentFilters.length > 0) {
      newFilters=currentFilters;
      boolean replaced=false;
      for (int i=0; i < currentFilters.length; i++) {
        if (currentFilters[i] instanceof InputFilter.LengthFilter) {
          currentFilters[i]=new InputFilter.LengthFilter(maxLength);
          replaced=true;
        }
      }
      if (!replaced) {
        newFilters=new InputFilter[currentFilters.length + 1];
        System.arraycopy(currentFilters,0,newFilters,0,currentFilters.length);
        currentFilters[currentFilters.length]=new InputFilter.LengthFilter(maxLength);
      }
    }
 else {
      newFilters=new InputFilter[1];
      newFilters[0]=new InputFilter.LengthFilter(maxLength);
    }
  }
  view.setFilters(newFilters);
}
