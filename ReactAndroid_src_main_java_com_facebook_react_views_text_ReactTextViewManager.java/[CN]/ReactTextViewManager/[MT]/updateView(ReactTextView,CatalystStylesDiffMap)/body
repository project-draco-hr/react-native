{
  BaseViewPropertyApplicator.applyCommonViewProperties(view,props);
  if (props.hasKey(PROP_NUMBER_OF_LINES)) {
    view.setMaxLines(props.getInt(PROP_NUMBER_OF_LINES,ViewDefaults.NUMBER_OF_LINES));
    view.setEllipsize(TextUtils.TruncateAt.END);
  }
  if (props.hasKey(PROP_TEXT_ALIGN)) {
    final String textAlign=props.getString(PROP_TEXT_ALIGN);
    if (textAlign == null || "auto".equals(textAlign)) {
      view.setGravity(Gravity.NO_GRAVITY);
    }
 else     if ("left".equals(textAlign)) {
      view.setGravity(Gravity.LEFT);
    }
 else     if ("right".equals(textAlign)) {
      view.setGravity(Gravity.RIGHT);
    }
 else     if ("center".equals(textAlign)) {
      view.setGravity(Gravity.CENTER_HORIZONTAL);
    }
 else {
      throw new JSApplicationIllegalArgumentException("Invalid textAlign: " + textAlign);
    }
  }
  if (props.hasKey(PROP_LINE_HEIGHT)) {
    if (props.isNull(PROP_LINE_HEIGHT)) {
      view.setLineSpacing(0,1);
    }
 else {
      float lineHeight=PixelUtil.toPixelFromSP(props.getInt(PROP_LINE_HEIGHT,ViewDefaults.LINE_HEIGHT));
      view.setLineSpacing(lineHeight,0);
    }
  }
}
