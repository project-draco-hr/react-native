{
  UiThreadUtil.assertOnUiThread();
  mIsBeingDestroyed=true;
synchronized (mJSToJavaCallsTeardownLock) {
synchronized (mJavaToJSCallsTeardownLock) {
      if (mDestroyed) {
        return;
      }
      mDestroyed=true;
      mJavaRegistry.notifyCatalystInstanceDestroy();
      Systrace.unregisterListener(mTraceListener);
      synchronouslyDisposeBridgeOnJSThread();
    }
  }
  mReactQueueConfiguration.destroy();
  boolean wasIdle=(mPendingJSCalls.getAndSet(0) == 0);
  if (!wasIdle && !mBridgeIdleListeners.isEmpty()) {
    for (    NotThreadSafeBridgeIdleDebugListener listener : mBridgeIdleListeners) {
      listener.onTransitionToBridgeIdle();
    }
  }
}
