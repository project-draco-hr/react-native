{
  mCatalystQueueConfiguration=CatalystQueueConfigurationImpl.create(catalystQueueConfigurationSpec,new NativeExceptionHandler());
  mBridgeIdleListeners=new CopyOnWriteArrayList<>();
  mJavaRegistry=registry;
  mJSModuleRegistry=new JavaScriptModuleRegistry(CatalystInstanceImpl.this,jsModulesConfig);
  mJSBundleLoader=jsBundleLoader;
  mNativeModuleCallExceptionHandler=nativeModuleCallExceptionHandler;
  mTraceListener=new JSProfilerTraceListener();
  final CountDownLatch initLatch=new CountDownLatch(1);
  mCatalystQueueConfiguration.getJSQueueThread().runOnQueue(new Runnable(){
    @Override public void run(){
      Systrace.beginSection(Systrace.TRACE_TAG_REACT_JAVA_BRIDGE,"initializeBridge");
      try {
        initializeBridge(jsExecutor,jsModulesConfig);
        initLatch.countDown();
      }
  finally {
        Systrace.endSection(Systrace.TRACE_TAG_REACT_JAVA_BRIDGE);
      }
    }
  }
);
  try {
    Assertions.assertCondition(initLatch.await(BRIDGE_SETUP_TIMEOUT_MS,TimeUnit.MILLISECONDS),"Timed out waiting for bridge to initialize!");
  }
 catch (  InterruptedException e) {
    throw new RuntimeException(e);
  }
}
