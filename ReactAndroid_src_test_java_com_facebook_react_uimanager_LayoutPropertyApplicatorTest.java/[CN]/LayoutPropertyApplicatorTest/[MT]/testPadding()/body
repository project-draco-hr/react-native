{
  LayoutShadowNode reactShadowNode=spy(new LayoutShadowNode());
  ReactStylesDiffMap map=spy(buildStyles("padding",10.0));
  reactShadowNode.updateProperties(map);
  verify(reactShadowNode).setPadding(eq(Spacing.ALL),anyFloat());
  verify(map).getFloat("padding",CSSConstants.UNDEFINED);
  reactShadowNode=spy(new LayoutShadowNode());
  map=spy(buildStyles("paddingVertical",10.0));
  reactShadowNode.updateProperties(map);
  verify(reactShadowNode).setPadding(eq(Spacing.VERTICAL),anyFloat());
  verify(map).getFloat("paddingVertical",CSSConstants.UNDEFINED);
  reactShadowNode=spy(new LayoutShadowNode());
  map=spy(buildStyles("paddingHorizontal",10.0));
  reactShadowNode.updateProperties(map);
  verify(reactShadowNode).setPadding(eq(Spacing.HORIZONTAL),anyFloat());
  verify(map).getFloat("paddingHorizontal",CSSConstants.UNDEFINED);
  reactShadowNode=spy(new LayoutShadowNode());
  map=spy(buildStyles("paddingTop",10.0));
  reactShadowNode.updateProperties(map);
  verify(reactShadowNode).setPadding(eq(Spacing.TOP),anyFloat());
  verify(map).getFloat("paddingTop",CSSConstants.UNDEFINED);
  reactShadowNode=spy(new LayoutShadowNode());
  map=spy(buildStyles("paddingBottom",10.0));
  reactShadowNode.updateProperties(map);
  verify(reactShadowNode).setPadding(eq(Spacing.BOTTOM),anyFloat());
  verify(map).getFloat("paddingBottom",CSSConstants.UNDEFINED);
  reactShadowNode=spy(new LayoutShadowNode());
  map=spy(buildStyles("paddingLeft",10.0));
  reactShadowNode.updateProperties(map);
  verify(reactShadowNode).setPadding(eq(Spacing.LEFT),anyFloat());
  verify(map).getFloat("paddingLeft",CSSConstants.UNDEFINED);
  reactShadowNode=spy(new LayoutShadowNode());
  map=spy(buildStyles("paddingRight",10.0));
  reactShadowNode.updateProperties(map);
  verify(reactShadowNode).setPadding(eq(Spacing.RIGHT),anyFloat());
  verify(map).getFloat("paddingRight",CSSConstants.UNDEFINED);
  reactShadowNode=spy(new LayoutShadowNode());
  map=spy(buildStyles());
  reactShadowNode.updateProperties(map);
  verify(reactShadowNode,never()).setPadding(anyInt(),anyFloat());
  verify(map,never()).getFloat("padding",CSSConstants.UNDEFINED);
}
