{
  mCatalystQueueConfiguration.getJSQueueThread().assertIsOnThread();
  Assertions.assertCondition(mBridge == null,"initializeBridge should be called once");
  mBridge=new ReactBridge(jsExecutor,new NativeModulesReactCallback(),mCatalystQueueConfiguration.getNativeModulesQueueThread());
  mBridge.setGlobalVariable("__fbBatchedBridgeConfig",buildModulesConfigJSONProperty(registry,jsModulesConfig));
  Systrace.beginSection(Systrace.TRACE_TAG_REACT_JAVA_BRIDGE,"CatalystInstance_initializeBridge");
  try {
    jsBundleLoader.loadScript(mBridge);
  }
  finally {
    Systrace.endSection(Systrace.TRACE_TAG_REACT_JAVA_BRIDGE);
  }
  mTraceListener=new TraceListener(){
    @Override public void onTraceStarted(){
      mCatalystQueueConfiguration.getJSQueueThread().runOnQueue(new Runnable(){
        @Override public void run(){
          mCatalystQueueConfiguration.getJSQueueThread().assertIsOnThread();
          if (mDestroyed) {
            return;
          }
          Assertions.assertNotNull(mBridge).setGlobalVariable("__BridgeProfilingIsProfiling","true");
        }
      }
);
    }
    @Override public void onTraceStopped(){
      mCatalystQueueConfiguration.getJSQueueThread().runOnQueue(new Runnable(){
        @Override public void run(){
          mCatalystQueueConfiguration.getJSQueueThread().assertIsOnThread();
          if (mDestroyed) {
            return;
          }
          Assertions.assertNotNull(mBridge).setGlobalVariable("__BridgeProfilingIsProfiling","false");
        }
      }
);
    }
  }
;
  Systrace.registerListener(mTraceListener);
}
