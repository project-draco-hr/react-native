{
  mDevServerHelper.downloadBundleFromURL(new DevServerHelper.BundleDownloadCallback(){
    @Override public void onSuccess(){
      progressDialog.dismiss();
      UiThreadUtil.runOnUiThread(new Runnable(){
        @Override public void run(){
          mReactInstanceCommandsHandler.onJSBundleLoadedFromServer();
        }
      }
);
    }
    @Override public void onFailure(    final Exception cause){
      progressDialog.dismiss();
      FLog.e(ReactConstants.TAG,"Unable to download JS bundle",cause);
      UiThreadUtil.runOnUiThread(new Runnable(){
        @Override public void run(){
          if (cause instanceof DebugServerException) {
            DebugServerException debugServerException=(DebugServerException)cause;
            showNewError(debugServerException.description,StackTraceHelper.convertJavaStackTrace(cause),JAVA_ERROR_COOKIE);
          }
 else {
            showNewError(mApplicationContext.getString(R.string.catalyst_jsload_error),StackTraceHelper.convertJavaStackTrace(cause),JAVA_ERROR_COOKIE);
          }
        }
      }
);
    }
  }
,Assertions.assertNotNull(mJSAppBundleName),mJSBundleTempFile);
}
