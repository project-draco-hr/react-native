{
  if (mDevSupportManager.getDevSupportEnabled() && Math.abs(jsSchedulingTime - System.currentTimeMillis()) > 1000) {
    throw new RuntimeException("System and emulator/device times have drifted. Please correct this by running adb shell \"date `date +%m%d%H%M%Y.%S`\" on your dev machine");
  }
  long adjustedDuration=(long)Math.max(0,jsSchedulingTime - SystemClock.currentTimeMillis() + duration);
  if (duration == 0 && !repeat) {
    WritableArray timerToCall=Arguments.createArray();
    timerToCall.pushInt(callbackID);
    getReactApplicationContext().getJSModule(executorToken,JSTimersExecution.class).callTimers(timerToCall);
    return;
  }
  long initialTargetTime=SystemClock.nanoTime() / 1000000 + adjustedDuration;
  Timer timer=new Timer(executorToken,callbackID,initialTargetTime,duration,repeat);
synchronized (mTimerGuard) {
    mTimers.add(timer);
    SparseArray<Timer> timersForContext=mTimerIdsToTimers.get(executorToken);
    if (timersForContext == null) {
      timersForContext=new SparseArray<>();
      mTimerIdsToTimers.put(executorToken,timersForContext);
    }
    timersForContext.put(callbackID,timer);
  }
}
