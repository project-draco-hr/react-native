{
  Activity activity=getCurrentActivity();
  if (activity == null) {
    promise.reject(ERROR_NO_ACTIVITY,"Tried to open a TimePicker dialog while not attached to an Activity");
    return;
  }
  if (activity instanceof android.support.v4.app.FragmentActivity) {
    android.support.v4.app.FragmentManager fragmentManager=((android.support.v4.app.FragmentActivity)activity).getSupportFragmentManager();
    android.support.v4.app.DialogFragment oldFragment=(android.support.v4.app.DialogFragment)fragmentManager.findFragmentByTag(FRAGMENT_TAG);
    if (oldFragment != null) {
      oldFragment.dismiss();
    }
    SupportTimePickerDialogFragment fragment=new SupportTimePickerDialogFragment();
    if (options != null) {
      Bundle args=createFragmentArguments(options);
      fragment.setArguments(args);
    }
    TimePickerDialogListener listener=new TimePickerDialogListener(promise);
    fragment.setOnDismissListener(listener);
    fragment.setOnTimeSetListener(listener);
    fragment.show(fragmentManager,FRAGMENT_TAG);
  }
 else {
    FragmentManager fragmentManager=activity.getFragmentManager();
    DialogFragment oldFragment=(DialogFragment)fragmentManager.findFragmentByTag(FRAGMENT_TAG);
    if (oldFragment != null) {
      oldFragment.dismiss();
    }
    TimePickerDialogFragment fragment=new TimePickerDialogFragment();
    if (options != null) {
      final Bundle args=createFragmentArguments(options);
      fragment.setArguments(args);
    }
    TimePickerDialogListener listener=new TimePickerDialogListener(promise);
    fragment.setOnDismissListener(listener);
    fragment.setOnTimeSetListener(listener);
    fragment.show(fragmentManager,FRAGMENT_TAG);
  }
}
