{
  final int tag=mNextRootViewTag;
  mNextRootViewTag+=ROOT_VIEW_TAG_INCREMENT;
  final ReactShadowNode rootCSSNode=new ReactShadowNode();
  rootCSSNode.setReactTag(tag);
  final ThemedReactContext themedRootContext=new ThemedReactContext(getReactApplicationContext(),rootView.getContext());
  rootCSSNode.setThemedContext(themedRootContext);
  if (rootView.getLayoutParams() != null && rootView.getLayoutParams().width > 0 && rootView.getLayoutParams().height > 0) {
    rootCSSNode.setStyleWidth(rootView.getLayoutParams().width);
    rootCSSNode.setStyleHeight(rootView.getLayoutParams().height);
  }
 else {
    rootCSSNode.setStyleWidth(rootView.getWidth());
    rootCSSNode.setStyleHeight(rootView.getHeight());
  }
  rootCSSNode.setViewClassName("Root");
  rootView.setOnSizeChangedListener(new SizeMonitoringFrameLayout.OnSizeChangedListener(){
    @Override public void onSizeChanged(    final int width,    final int height,    int oldW,    int oldH){
      getReactApplicationContext().runOnNativeModulesQueueThread(new Runnable(){
        @Override public void run(){
          updateRootNodeSize(rootCSSNode,width,height);
        }
      }
);
    }
  }
);
  mShadowNodeRegistry.addRootNode(rootCSSNode);
  mOperationsQueue.addRootView(tag,rootView,themedRootContext);
  return tag;
}
