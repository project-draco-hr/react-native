{
  File bundle=getOutputFile(mConfig);
  bundle.getParentFile().mkdirs();
  PackagerStatus packagerStatus=getPackagerStatus(mConfig);
  if (packagerStatus == PackagerStatus.NOT_RUNNING) {
    boolean started=startPackager();
    if (started) {
      packagerStatus=getPackagerStatus(mConfig);
    }
    if (!started || packagerStatus != PackagerStatus.RUNNING) {
      throw new Exception("Could not start packager server. Please start it manually and try again.");
    }
  }
  if (packagerStatus == PackagerStatus.RUNNING) {
    URL packageUrl=getPackageUrl(mConfig,mPackagerParams);
    InputStream packageStream=packageUrl.openStream();
    OutputStream bundleStream=new FileOutputStream(bundle);
    IOUtils.copy(packageStream,bundleStream);
    IOUtils.closeQuietly(packageStream);
    IOUtils.closeQuietly(bundleStream);
  }
 else   if (packagerStatus == PackagerStatus.UNKNOWN) {
    throw new Exception("Did not recognize the server at " + mConfig.getPackagerHost() + ". Please stop the service listening at this address and try again.");
  }
}
