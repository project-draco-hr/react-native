{
  if (mMethods == null) {
    Systrace.beginSection(TRACE_TAG_REACT_JAVA_BRIDGE,"findMethods");
    mMethods=new HashMap<>();
    mHooks=new HashMap<>();
    Method[] targetMethods=getClass().getDeclaredMethods();
    for (    Method targetMethod : targetMethods) {
      if (targetMethod.getAnnotation(ReactMethod.class) != null) {
        String methodName=targetMethod.getName();
        if (mHooks.containsKey(methodName) || mMethods.containsKey(methodName)) {
          throw new IllegalArgumentException("Java Module " + getName() + " sync method name already registered: "+ methodName);
        }
        mMethods.put(methodName,new JavaMethod(targetMethod));
      }
      if (targetMethod.getAnnotation(ReactSyncHook.class) != null) {
        String methodName=targetMethod.getName();
        if (mHooks.containsKey(methodName) || mMethods.containsKey(methodName)) {
          throw new IllegalArgumentException("Java Module " + getName() + " sync method name already registered: "+ methodName);
        }
        mHooks.put(methodName,new SyncJavaHook(targetMethod));
      }
    }
    Systrace.endSection(TRACE_TAG_REACT_JAVA_BRIDGE);
  }
}
