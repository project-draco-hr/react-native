{
  Class[] paramTypes=method.getParameterTypes();
  StringBuilder builder=new StringBuilder(paramTypes.length + 2);
  builder.append(returnTypeToChar(method.getReturnType()));
  builder.append('.');
  for (int i=0; i < paramTypes.length; i++) {
    Class paramClass=paramTypes[i];
    if (paramClass == ExecutorToken.class) {
      if (!BaseJavaModule.this.supportsWebWorkers()) {
        throw new RuntimeException("Module " + BaseJavaModule.this + " doesn't support web workers, but "+ mMethod.getName()+ " takes an ExecutorToken.");
      }
    }
 else     if (paramClass == Promise.class) {
      Assertions.assertCondition(i == paramTypes.length - 1,"Promise must be used as last parameter only");
    }
    builder.append(paramTypeToChar(paramClass));
  }
  return builder.toString();
}
