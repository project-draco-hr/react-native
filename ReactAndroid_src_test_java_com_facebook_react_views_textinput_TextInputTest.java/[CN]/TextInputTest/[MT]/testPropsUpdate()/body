{
  UIManagerModule uiManager=getUIManagerModule();
  ReactRootView rootView=new ReactRootView(RuntimeEnvironment.application);
  int rootTag=uiManager.addMeasuredRootView(rootView);
  int textInputTag=rootTag + 1;
  final String hintStr="placeholder text";
  uiManager.createView(textInputTag,ReactTextInputManager.REACT_CLASS,rootTag,SimpleMap.of(ViewProps.FONT_SIZE,13.37,ViewProps.HEIGHT,20.0,"placeholder",hintStr));
  uiManager.manageChildren(rootTag,null,null,SimpleArray.of(textInputTag),SimpleArray.of(0),null);
  uiManager.onBatchComplete();
  executePendingChoreographerCallbacks();
  EditText editText=(EditText)rootView.getChildAt(0);
  assertThat(editText.getHint()).isEqualTo(hintStr);
  assertThat(editText.getTextSize()).isEqualTo((float)Math.ceil(13.37));
  assertThat(editText.getHeight()).isEqualTo(20);
  final String hintStr2="such hint";
  uiManager.updateView(textInputTag,ReactTextInputManager.REACT_CLASS,SimpleMap.of(ViewProps.FONT_SIZE,26.74,ViewProps.HEIGHT,40.0,"placeholder",hintStr2));
  uiManager.onBatchComplete();
  executePendingChoreographerCallbacks();
  EditText updatedEditText=(EditText)rootView.getChildAt(0);
  assertThat(updatedEditText.getHint()).isEqualTo(hintStr2);
  assertThat(updatedEditText.getTextSize()).isEqualTo((float)Math.ceil(26.74f));
  assertThat(updatedEditText.getHeight()).isEqualTo(40);
}
