{
  int result=sLoadedLibraries.contains(soName) ? SoSource.LOAD_RESULT_LOADED : SoSource.LOAD_RESULT_NOT_FOUND;
  for (int i=0; result == SoSource.LOAD_RESULT_NOT_FOUND && i < sSoSources.length; ++i) {
    result=sSoSources[i].loadLibrary(soName,loadFlags);
  }
  if (result == SoSource.LOAD_RESULT_NOT_FOUND) {
    throw new UnsatisfiedLinkError("could find DSO to load: " + soName);
  }
  if (result == SoSource.LOAD_RESULT_LOADED) {
    sLoadedLibraries.add(soName);
  }
}
