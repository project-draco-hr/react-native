{
  super(context,R.style.Theme_Catalyst_RedBox);
  requestWindowFeature(Window.FEATURE_NO_TITLE);
  setContentView(R.layout.redbox_view);
  mDevSupportManager=devSupportManager;
  mDoubleTapReloadRecognizer=new DoubleTapReloadRecognizer();
  mStackView=(ListView)findViewById(R.id.rn_redbox_stack);
  mStackView.setOnItemClickListener(this);
  mReloadJs=(Button)findViewById(R.id.rn_redbox_reload_button);
  mReloadJs.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      mDevSupportManager.handleReloadJS();
    }
  }
);
  mDismiss=(Button)findViewById(R.id.rn_redbox_dismiss_button);
  mDismiss.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      dismiss();
    }
  }
);
  mCopyToClipboard=(Button)findViewById(R.id.rn_redbox_copy_button);
  mCopyToClipboard.setOnClickListener(new View.OnClickListener(){
    @Override public void onClick(    View v){
      String title=mDevSupportManager.getLastErrorTitle();
      StackFrame[] stack=mDevSupportManager.getLastErrorStack();
      Assertions.assertNotNull(title);
      Assertions.assertNotNull(stack);
      new CopyToHostClipBoardTask(mDevSupportManager).executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR,StackTraceHelper.formatStackTrace(title,stack));
    }
  }
);
}
