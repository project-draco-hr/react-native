{
  Collection<Integer> zIndexes=mZIndexHash.values();
  boolean containsZIndexedElement=false;
  for (  Integer zIndex : zIndexes) {
    if (zIndex != 0) {
      containsZIndexedElement=true;
      break;
    }
  }
  if (!containsZIndexedElement) {
    return;
  }
  ArrayList<View> viewsToSort=new ArrayList<>();
  for (int i=0; i < view.getChildCount(); i++) {
    viewsToSort.add(view.getChildAt(i));
  }
  Collections.sort(viewsToSort,new Comparator<View>(){
    @Override public int compare(    View view1,    View view2){
      Integer view1ZIndex=mZIndexHash.get(view1);
      if (view1ZIndex == null) {
        view1ZIndex=0;
      }
      Integer view2ZIndex=mZIndexHash.get(view2);
      if (view2ZIndex == null) {
        view2ZIndex=0;
      }
      return view1ZIndex - view2ZIndex;
    }
  }
);
  for (int i=0; i < viewsToSort.size(); i++) {
    viewsToSort.get(i).bringToFront();
  }
  view.invalidate();
}
