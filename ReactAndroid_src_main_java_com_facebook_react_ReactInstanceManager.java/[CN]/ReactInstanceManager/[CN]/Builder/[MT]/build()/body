{
  Assertions.assertCondition(mUseDeveloperSupport || mJSBundleFile != null,"JS Bundle File has to be provided when dev support is disabled");
  Assertions.assertCondition(mJSMainModuleName != null || mJSBundleFile != null,"Either MainModuleName or JS Bundle File needs to be provided");
  if (mUIImplementationProvider == null) {
    mUIImplementationProvider=new UIImplementationProvider();
  }
  return new ReactInstanceManagerImpl(Assertions.assertNotNull(mApplication,"Application property has not been set with this builder"),mCurrentActivity,mDefaultHardwareBackBtnHandler,mJSBundleFile,mJSMainModuleName,mPackages,mUseDeveloperSupport,mBridgeIdleDebugListener,Assertions.assertNotNull(mInitialLifecycleState,"Initial lifecycle state was not set"),mUIImplementationProvider,mNativeModuleCallExceptionHandler,mJSCConfig,mRedBoxHandler);
}
