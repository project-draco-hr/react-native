{
  ConstantsModule constantsModule=new ConstantsModule();
  NativeModuleRegistry registry=new NativeModuleRegistry.Builder().add(constantsModule).build();
  String json=getModuleDescriptions(registry);
  JsonNode node=parse(json);
  JsonNode module=node.fields().next().getValue();
  assertThat(module).isNotNull();
  JsonNode methods=module.get("methods");
  assertThat(methods).isNotNull();
  ArrayList<String> expected=new ArrayList<String>();
  expected.add("runDMC");
  assertMethodsContainExactly(methods,expected);
  JsonNode constants=module.get("constants");
  assertThat(constants.get("testInt").asInt()).isEqualTo(3);
  assertThat(constants.get("testDouble").asDouble()).isEqualTo(3.14);
  assertThat(constants.get("testString").asText()).isEqualTo("red panda");
  JsonNode stringMap=constants.get("testStringMap");
  assertThat(stringMap.get("war_room").asText()).isEqualTo("17.1");
  assertThat(stringMap.get("android_corex").asText()).isEqualTo("16.1");
  JsonNode intMap=constants.get("testIntMap");
  assertThat(intMap.get("42").asInt()).isEqualTo(1);
  assertThat(intMap.get("84").asInt()).isEqualTo(2);
  JsonNode stringList=constants.get("testStringList");
  assertThat(stringList.get(0).asText()).isEqualTo("vulpes vulpes");
  assertThat(stringList.get(4).asText()).isEqualTo("vulpes velox");
  JsonNode intList=constants.get("testIntList");
  assertThat(intList.get(0).asInt()).isEqualTo(3);
  assertThat(intList.get(4).asInt()).isEqualTo(5);
}
